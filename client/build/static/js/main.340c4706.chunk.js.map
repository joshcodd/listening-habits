{"version":3,"sources":["components/LogInScreen/LogInScreen.jsx","components/Header/Header.jsx","components/Slideshow/Slideshow.jsx","components/SlideshowItem/SlideshowItem.jsx","components/DataBar/DataBar.jsx","spotifyAPI.js","components/SplitButton/SplitButton.jsx","components/HomeScreen/HomeScreen.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["LogInScreen","className","href","Header","props","src","image","alt","name","following","followers","onClick","document","cookie","console","log","window","location","replace","currentView","children","Slideshow","setCurrentView","icon","faReply","size","color","SlideshowItem","id","DataBar","index","type","data","slice","artist","album","convertTime","time","alert","getProfileData","token","a","fetch","headers","Authorization","res","json","body","images","length","url","display_name","total","getFollowing","artists","getTopArtists","timeRange","topData","topArtists","items","i","push","getTopTracks","topTracks","release","release_date","SplitButton","handleClick","event","prevSelect","getElementById","currentSelection","style","backgroundColor","setSelection","target","useEffect","selectedButton","HomeScreen","useState","profileData","setProfileData","topArtistData","setTopArtists","topTracksData","setTopTracks","currentTimeSelection","setCurrentTimeSelection","generate","timeSelection","profile","map","key","track","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.340c4706.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./loginscreen.css\";\n\nfunction LogInScreen() {\n  return (\n    <div className=\"LogIn\">\n      <div className=\"title\"></div>\n      <h1 className=\"listening\"> Listening </h1>\n      <h1 className=\"habits\"> Habits </h1>\n      {/* <a href=\"http://localhost:5000/APIlogin\"> */}\n      <a href=\"https://radiant-fortress-31626.herokuapp.com/APIlogin\">\n        <button className=\"logInButton\">Log in with Spotify</button>\n      </a>\n    </div>\n  );\n}\n\nexport default LogInScreen;\n","import React from \"react\";\nimport \"./header.css\";\n\nfunction Header(props) {\n  function handle() {\n    document.cookie = \"accessToken=\";\n    console.log(document.cookie);\n    window.location.replace(\"https://radiant-fortress-31626.herokuapp.com\");\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"profileContainer\">\n        <img className=\"profilePicture\" src={props.image} alt=\"profile\" />\n\n        <h1 className=\"name\">{props.name}</h1>\n        <div className=\"followBox followLeft\">\n          <h1 className=\"followTitle\">Following</h1>\n          <h1 className=\"follow\">{props.following}</h1>\n        </div>\n\n        <div className=\"followBox \">\n          <h1 className=\"followTitle\">Followers</h1>\n          <h1 className=\"follow\">{props.followers}</h1>\n        </div>\n        <button className=\"logOut\" onClick={handle}>\n          Log Out\n        </button>\n      </div>\n\n      <h1 className=\"currentTitle\">Top {props.currentView}</h1>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./slideshow.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Slideshow(props) {\n  function handleClickDown() {\n    props.setCurrentView(\"Tracks\");\n  }\n\n  function handleClickUp() {\n    props.setCurrentView(\"Artists\");\n  }\n\n  return (\n    <div>\n      <div className=\"slideshow\">{props.children}</div>\n\n      <ul className=\"buttons\">\n        <li className=\"upArrow\">\n          <a href=\"#artists\" onClick={handleClickUp}>\n            <FontAwesomeIcon icon={faReply} size=\"3x\" color=\"white\" />\n          </a>\n        </li>\n\n        <li className=\"navigate\">Navigate</li>\n\n        <li className=\"downArrow\">\n          <a href=\"#tracks\" onClick={handleClickDown}>\n            <FontAwesomeIcon icon={faReply} size=\"3x\" color=\"white\" />\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Slideshow;\n","import React from \"react\";\nimport \"./slideshowitem.css\";\n\nfunction SlideshowItem(props) {\n  return (\n    <div className={\"item \" + props.className} id={props.id}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default SlideshowItem;\n","import React from \"react\";\nimport \"./databar.css\";\n\nfunction DataBar(props) {\n  return (\n    <div className=\"databar\">\n      <span className=\"index\">{props.index + 1}</span>\n\n      <img\n        className={props.type === \"artist\" ? \"artistImage\" : \"trackImage\"}\n        src={props.data.image}\n        alt=\"artist\"\n      ></img>\n\n      <span className=\"data\">{props.data.name.slice(0, 35)}</span>\n\n      {props.type === \"tracks\" && (\n        <span className=\"trackArtist\">\n          {props.data.artist + \" - \" + props.data.album}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default DataBar;\n","export function convertTime(time) {\n  switch (time) {\n    case \"4 Weeks\":\n      return \"short_term\";\n\n    case \"6 Months\":\n      return \"medium_term\";\n\n    case \"All Time\":\n      return \"long_term\";\n\n    default:\n      alert(\"Error\");\n      break;\n  }\n}\n\nexport async function getProfileData(token) {\n  const res = await fetch(\"https://api.spotify.com/v1/me\", {\n    headers: { Authorization: \"Bearer \" + token },\n  });\n  const body = await res.json();\n  console.log(body);\n\n  return {\n    image:\n      body.images.length > 0\n        ? body.images[0].url\n        : \"https://yt3.ggpht.com/iMT9MVrt6qxAfTxeKUX17ESdppsDntW2eA9YvnONcPqxlbdt9SkVhaIRsAtE0PFqRiLA-arexQ=s900-c-k-c0xffffffff-no-rj-mo\",\n    name: body.display_name,\n\n    followers: body.followers.total,\n  };\n}\n\nexport async function getFollowing(token) {\n  const res = await fetch(\n    \"https://api.spotify.com/v1/me/following?type=artist\",\n    {\n      headers: { Authorization: \"Bearer \" + token },\n    }\n  );\n  const body = await res.json();\n  return body.artists.total;\n}\n\nexport async function getTopArtists(token, timeRange) {\n  const res = await fetch(\n    `https://api.spotify.com/v1/me/top/artists?time_range=${timeRange}&limit=20&offset=0`,\n    { headers: { Authorization: \"Bearer \" + token } }\n  );\n  const topData = await res.json();\n  let topArtists = [];\n\n  let length = topData.items.length;\n  if (length > 10) {\n    length = 10;\n  }\n\n  for (let i = 0; i < length; i++) {\n    topArtists.push({\n      name: topData.items[i].name,\n      image: topData.items[i].images[0].url,\n    });\n  }\n  return topArtists;\n}\n\nexport async function getTopTracks(token, timeRange) {\n  const res = await fetch(\n    `https://api.spotify.com/v1/me/top/tracks?time_range=${timeRange}&limit=20&offset=0`,\n    { headers: { Authorization: \"Bearer \" + token } }\n  );\n  const topData = await res.json();\n  let topTracks = [];\n\n  let length = topData.items.length;\n  if (length > 10) {\n    length = 10;\n  }\n  for (let i = 0; i < length; i++) {\n    topTracks.push({\n      name: topData.items[i].name,\n      artist: topData.items[i].artists[0].name,\n      album: topData.items[i].album.name,\n      release: topData.items[i].album.release_date,\n      image: topData.items[i].album.images[0].url,\n    });\n  }\n\n  return topTracks;\n}\n","import React, { useEffect } from \"react\";\nimport \"./splitbutton.css\";\n\nfunction SplitButton(props) {\n  //Set button selected initially on mount\n  useEffect(() => {\n    let selectedButton = document.getElementById(props.currentSelection).style;\n    selectedButton.backgroundColor = \"white\";\n    selectedButton.color = \"black\";\n  });\n\n  function handleClick(event) {\n    let prevSelect = document.getElementById(props.currentSelection).style;\n    prevSelect.backgroundColor = \"\";\n    prevSelect.color = \"\";\n    props.setSelection(event.target.id);\n  }\n\n  return (\n    <div className=\"buttonContainer\">\n      <button className={\"buttonLeft\"} onClick={handleClick} id=\"4 Weeks\">\n        4 Weeks\n      </button>\n      <button className=\"buttonCenter\" onClick={handleClick} id=\"6 Months\">\n        6 Months\n      </button>\n      <button className={\"buttonRight\"} onClick={handleClick} id=\"All Time\">\n        All Time\n      </button>\n    </div>\n  );\n}\n\nexport default SplitButton;\n","import React, { useEffect, useState } from \"react\";\nimport \"./homescreen.css\";\nimport Header from \"../Header/Header\";\nimport Slideshow from \"../Slideshow/Slideshow\";\nimport SlideshowItem from \"../SlideshowItem/SlideshowItem\";\nimport DataBar from \"../DataBar/DataBar\";\nimport {\n  getProfileData,\n  getTopArtists,\n  getTopTracks,\n  getFollowing,\n  convertTime,\n} from \"../../spotifyAPI\";\nimport SplitButton from \"../SplitButton/SplitButton\";\n\nfunction HomeScreen(props) {\n  const [profileData, setProfileData] = useState({\n    image: \"\",\n    name: \"\",\n    followers: 0,\n    following: 0,\n  });\n  const [topArtistData, setTopArtists] = useState(\"\");\n  const [topTracksData, setTopTracks] = useState(\"\");\n  const [currentView, setCurrentView] = useState(\"Artists\");\n  const [currentTimeSelection, setCurrentTimeSelection] = useState(\"All Time\");\n\n  useEffect(() => {\n    generate(currentTimeSelection);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    generate(currentTimeSelection);\n    // eslint-disable-next-line\n  }, [currentTimeSelection]);\n\n  async function generate(timeSelection) {\n    let timeRange = convertTime(timeSelection);\n\n    let following = await getFollowing(props.token);\n    let profile = await getProfileData(props.token);\n    setProfileData({ ...profile, following: following });\n\n    let topArtists = await getTopArtists(props.token, timeRange);\n    setTopArtists(topArtists);\n\n    let topTracks = await getTopTracks(props.token, timeRange);\n    setTopTracks(topTracks);\n  }\n\n  return (\n    <div className=\"profile\">\n      <Header\n        image={profileData.image}\n        name={profileData.name}\n        followers={profileData.followers}\n        following={profileData.following}\n        currentView={currentView}\n      >\n        <SplitButton\n          currentSelection={currentTimeSelection}\n          setSelection={setCurrentTimeSelection}\n        />\n      </Header>\n\n      <Slideshow currentView={currentView} setCurrentView={setCurrentView}>\n        <SlideshowItem id=\"artists\">\n          {topArtistData === \"\"\n            ? null\n            : topArtistData.map((artist, index) => {\n                return (\n                  <DataBar\n                    key={index}\n                    index={index}\n                    type=\"artist\"\n                    data={artist}\n                  ></DataBar>\n                );\n              })}\n        </SlideshowItem>\n\n        <SlideshowItem id=\"tracks\">\n          {topTracksData === \"\"\n            ? null\n            : topTracksData.map((track, index) => {\n                return (\n                  <DataBar\n                    key={index}\n                    index={index}\n                    type=\"tracks\"\n                    data={track}\n                  ></DataBar>\n                );\n              })}\n        </SlideshowItem>\n      </Slideshow>\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import React from \"react\";\nimport LogInScreen from \"./LogInScreen/LogInScreen\";\nimport HomeScreen from \"./HomeScreen/HomeScreen\";\n\nfunction App(props) {\n  let token = document.cookie;\n  token = token.slice(12, token.length);\n  console.log(token);\n\n  return (\n    <div className=\"App\">\n      {token === \"\" ? <LogInScreen /> : <HomeScreen token={token} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}